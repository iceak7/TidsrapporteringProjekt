// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TidsrapporteringProjekt.API.Models;

namespace TidsrapporteringProjekt.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220406124848_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TidsrapporteringProjekt.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("EmployedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Age = 22,
                            EmployedDate = new DateTime(2021, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Isak",
                            Gender = "Male",
                            JobTitle = "Programmer",
                            LastName = "Jensen"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Age = 30,
                            EmployedDate = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Anas",
                            Gender = "Male",
                            JobTitle = "Programming Teacher",
                            LastName = "Qlok"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Age = 45,
                            EmployedDate = new DateTime(2021, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Reidar",
                            Gender = "Male",
                            JobTitle = "Teacher",
                            LastName = "Qlok"
                        });
                });

            modelBuilder.Entity("TidsrapporteringProjekt.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            IsActive = false,
                            ProjectDescription = "Creating a bank-console-application",
                            ProjectName = "Bank Project"
                        },
                        new
                        {
                            ProjectId = 2,
                            IsActive = true,
                            ProjectDescription = "Creating a time-reporting-application",
                            ProjectName = "Time Reporting Project"
                        },
                        new
                        {
                            ProjectId = 3,
                            IsActive = true,
                            ProjectDescription = "Teach the students programming",
                            ProjectName = "Teach programming"
                        });
                });

            modelBuilder.Entity("TidsrapporteringProjekt.Models.ProjectEmployee", b =>
                {
                    b.Property<int>("ProjectEmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ProjectEmployeeId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectEmployees");

                    b.HasData(
                        new
                        {
                            ProjectEmployeeId = 1,
                            EmployeeId = 1,
                            ProjectId = 1
                        },
                        new
                        {
                            ProjectEmployeeId = 2,
                            EmployeeId = 1,
                            ProjectId = 2
                        },
                        new
                        {
                            ProjectEmployeeId = 3,
                            EmployeeId = 2,
                            ProjectId = 3
                        },
                        new
                        {
                            ProjectEmployeeId = 4,
                            EmployeeId = 3,
                            ProjectId = 3
                        });
                });

            modelBuilder.Entity("TidsrapporteringProjekt.Models.TimeReport", b =>
                {
                    b.Property<int>("TimeReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("TimeReportId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("TimeReports");

                    b.HasData(
                        new
                        {
                            TimeReportId = 1,
                            Comment = "Worked on the bank project",
                            EmployeeId = 1,
                            EndTime = new DateTime(2021, 12, 7, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 1,
                            StartTime = new DateTime(2021, 12, 7, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TimeReportId = 2,
                            Comment = "Worked on the bank project",
                            EmployeeId = 1,
                            EndTime = new DateTime(2021, 12, 8, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 1,
                            StartTime = new DateTime(2021, 12, 8, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TimeReportId = 3,
                            Comment = "I studied",
                            EmployeeId = 1,
                            EndTime = new DateTime(2022, 1, 3, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 1, 3, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TimeReportId = 4,
                            Comment = "Worked on the time-report project",
                            EmployeeId = 1,
                            EndTime = new DateTime(2022, 4, 6, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 2,
                            StartTime = new DateTime(2022, 4, 6, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TimeReportId = 5,
                            Comment = "Worked on the time-report project",
                            EmployeeId = 1,
                            EndTime = new DateTime(2022, 4, 5, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 2,
                            StartTime = new DateTime(2022, 4, 5, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TimeReportId = 6,
                            Comment = "Teached about API",
                            EmployeeId = 2,
                            EndTime = new DateTime(2022, 4, 5, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3,
                            StartTime = new DateTime(2022, 4, 5, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TimeReportId = 7,
                            Comment = "Teached about SQL",
                            EmployeeId = 2,
                            EndTime = new DateTime(2022, 1, 5, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3,
                            StartTime = new DateTime(2022, 1, 5, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TimeReportId = 8,
                            Comment = "Teached about microservices",
                            EmployeeId = 3,
                            EndTime = new DateTime(2022, 3, 20, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = 3,
                            StartTime = new DateTime(2022, 3, 20, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TidsrapporteringProjekt.Models.ProjectEmployee", b =>
                {
                    b.HasOne("TidsrapporteringProjekt.Models.Employee", "Employee")
                        .WithMany("ProjectEmployee")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TidsrapporteringProjekt.Models.Project", "Project")
                        .WithMany("ProjectEmployee")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TidsrapporteringProjekt.Models.TimeReport", b =>
                {
                    b.HasOne("TidsrapporteringProjekt.Models.Employee", "Employee")
                        .WithMany("TimeReports")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TidsrapporteringProjekt.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");
                });
#pragma warning restore 612, 618
        }
    }
}
